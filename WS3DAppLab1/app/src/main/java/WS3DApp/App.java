/*
 * This Java source file was generated by the Gradle 'init' task.
 */

package WS3DApp;

import java.util.List;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.DefaultListModel;

import ws3dproxy.WS3DProxy;
import ws3dproxy.model.Creature;
import ws3dproxy.model.World;
import ws3dproxy.model.Thing;
//import ws3dproxy.model.WorldPoint;

public class App {
    
    //public Creature c;
    public World w;
    public int width;
    public int height;
    
    private List<Creature> creatureList = new ArrayList<>();
    private Creature selectedCreature;
    private ControladorManual controlador;
            
    //  Creature selectedCreature = creatureList.get(Integer.parseInt((String) ItemCreatures.getSelectedItem()));
    
    
    public List<Creature> getCreatureList(){
        return creatureList;
    }
    
    public Creature getSelectedCreature(){
        return this.selectedCreature;
    }
    
    public void setSelectedCreature(Creature selectedCreature){
        this.selectedCreature = selectedCreature;
    }
    
    public App() {
        WS3DProxy proxy = new WS3DProxy();
        
        try {   
            w = World.getInstance();
            width = w.getEnvironmentWidth();
            height = w.getEnvironmentHeight();
            //System.out.println("Width: " + width + ". Height: " + height);
            
            w.reset();
            
            //World.createFood(0, 350, 75);
            //World.createFood(0, 100, 220);
            //World.createFood(1, 250, 210);
            //World.createDeliverySpot(250, 250);
            //World.createJewel(0, 10, 50);
            //World.createJewel(1, 100, 500);
            //World.createBrick(3, 500, 200, 505, 300);
            //c = proxy.createCreature(100,450,0);
            //c.start();
            
        } catch (Exception e) {
            System.out.println("Error capturado inicial"); 
        }
    }

    public void setControlador(ControladorManual cm){
        this.controlador = cm;
    }
    
    public static void main(String[] args) {
        Random r                 = new Random();
        App app                  = new App();
        WS3DProxy proxy          = new WS3DProxy();
        
        ControladorManual cm     = new ControladorManual(app, proxy);
        app.setControlador(cm);
        cm.setVisible(true);
        try {
            while(true) {
                List<Creature> creatures = app.getCreatureList();
                //System.out.println("Creatures: " + creatures);
                Thread.sleep(500);
                //if (creatures != null){ 
                //    for (int i = 0; i < creatures.size(); i++){
                //    creatures.get(i).updateState();
                //    }
                //System.out.println("SelectedCreature: " + app.getSelectedCreature());
                if (creatures != null && !creatures.isEmpty() && app.getSelectedCreature() != null) {    
                    
                    //int selectedIndex = cm.getSelectedCreatureIndex();
                    //System.out.println("Index: " + selectedIndex);

                    //if (selectedIndex >= 0 && selectedIndex < creatures.size()) {

                    //    Creature selectedCreature = creatures.get(selectedIndex);
                    //selectedCreature = app.getSelectedCreature();
                    
                    
                    //DefaultListModel<String> model = new DefaultListModel<>();
                    
                    for (int i = 0; i < creatures.size(); i++){
                        creatures.get(i).updateState();
                    }
                    
                    app.getSelectedCreature().updateState();
                    List<Thing> thingsInVision = app.getSelectedCreature().getThingsInVision();    
                    
                    //System.out.print("It can see the following from here: ");
                    //for (Thing t : app.getSelectedCreature().getThingsInVision()) {
                    //    System.out.print(" "+t.getName());
                        //model.addElement(t.getName());
                    //}
                    //System.out.println();
                    
                    if (app.controlador != null) {
                        app.getSelectedCreature().updateState();
                        app.controlador.updateJList(thingsInVision);
                        app.getSelectedCreature().updateState();
                    }

                    
                    //}
                }
            //}

            
            
            /*    app.c.moveto(4, r.nextInt(app.width),r.nextInt(app.height));
                Thread.sleep(5000);
                WorldPoint position = app.c.getPosition();
                double pitch = app.c.getPitch();
                double fuel = app.c.getFuel();
                System.out.println("Creature is at "+position+" with pitch "+pitch+" and fuel "+fuel);
                app.c.updateState();
                System.out.print("It can see the following from here: ");
                for (Thing t : app.c.getThingsInVision()) {
                    System.out.print(" "+t.getName());
                }
                System.out.println("");*/
            
            }
        } catch (Exception e) {
            System.out.println("Erro capturado en el main: " + e.getMessage()); 
        }
    }
}
